# JS-Learning-log
/*
		 * 定时器
		 * 1.循环定时器    setInterval();
		 * 2.延迟定时器    setTimeout();
		 * 
		 * 参数1:可执行的代码语句（函数）
		 * 参数2:时间(单位是毫秒)  1s == 1000ms
		 * 
		 * 清除定时器
		 * clearInterval()
		 * 接受一个参数，这个参数是你要清除的定时器的名字
		 * 
		 * 定时器不用的话一定要及时清除
		 * 开定时器之前，一定要记得先把这个定时器清除一遍
		 * 
		 */
		
		//setTimeout()
		//alert("hello world");
		//setTimeout("alert('hello world')",5000)
		function print(){
			console.log(1);
		}
//		print()
		//setTimeout(print,3000);
		
		
		//循环定时器
//		setInterval(print,1000);

		var num = 10;
		function time(){
			num--;
			if(num < 0){
				//清除定时器
				clearInterval(timer1);
			}
			console.log(num);
			box.innerHTML = num;
		}
		var timer1 = setInterval(time,1000);
		var timer2 = setInterval("console.log(1)",1000);
		
		//定时器
		//延迟定时器（单次定时器）   setTimeout()
		//循环定时器    setInterval()
		//清除循环定时器  clearInterval()
		var btn = document.getElementById('btn');
		var div = document.getElementById('div');
//		btn.onclick = function(){
//			div.style.marginLeft = "200px";
//		}


		//JS通过 style 的方式只能获取到行间样式

		
		
		function timer(){
			var timer1 = setInterval(go,50);
			function go(){
				var speed = 5;
				div.style.marginLeft = parseInt(div.style.marginLeft) + speed + "px";
				if(parseInt(div.style.marginLeft) >= 500){
					clearInterval(timer1);
				}
			}
		}
		btn.onclick = timer;
		
		//只要函数名加括号就会使函数立即执行，如果我们希望定时器是在某一事件触发之后才执行的话，我们可以把这个定时器放到一个函数中，把这个函数赋值给这个元素的点击事件
